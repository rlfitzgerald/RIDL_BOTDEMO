<!DOCTYPE HTML>
<html>
<head>
    <title>Flask-SocketIO Test</title>
    <script type="text/javascript" src="//code.jquery.com/jquery-1.4.2.min.js"></script>
    <script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/socket.io/1.3.5/socket.io.min.js"></script>
    <script type="text/javascript" src="//cdn.plot.ly/plotly-latest.min.js"></script> 
    <script type="text/javascript" charset="utf-8">    
  $(document).ready(function() {
            // Use a "/test" namespace.
            // An application can open a connection on multiple namespaces, and
            // Socket.IO will multiplex all those connections on a single
            // physical channel. If you don't care about multiple channels, you
            // can set the namespace to an empty string.
            namespace = '/test';

            // Connect to the Socket.IO server.
            // The connection URL has the following format:
            //     http[s]://<domain>:<port>[/<namespace>]
            var socket = io.connect(location.protocol + '//' + document.domain + ':' + location.port + namespace);

            // Event handler for new connections.
            // The callback function is invoked when a connection with the
            // server is established.
            socket.on('connect', function() {
                socket.emit('my_event', {data: 'I\'m connected!'});
            });

            // Event handler for server sent data.
            // The callback function is invoked whenever the server emits data
            // to the client. The data is then displayed in the "Received"
            // section of the page.
            socket.on('my_response', function(msg) {
                $('#log').append('<br>' + $('<div/>').text('Received #' + msg.count + ': ' + msg.data).html());
  		socket.emit("testtest",{data:'Im connected'})  
              });

	    socket.on('refresh',function(msg) {
                $('#log').append("refresh").html();
  	    	socket.emit("testtest",{data:'refresh connected'})  
	     });


	    socket.on('gen_map', function(msg) {
		//var div = document.createElement('div')
		// div.id = 'fooooo'	
		var bigdiv = document.getElementById('bigdiv')	
		var thediv = document.createElement('div') 
		thediv.innerHTML = msg.data
		// divide the msg into a div and a script		
		var divdiv = thediv.getElementsByTagName('div') 
		bigdiv.appendChild(divdiv[0])
		var arr = thediv.getElementsByTagName('script')
		for (var n = 0; n<arr.length;n++) {
				eval(arr[n].innerHTML) }
		});  
           
	  $('form#disconnect').submit(function(event) {
                socket.emit('disconnect_request');
                return false;
            });
        });
    </script>
</head>
<body>
    <h1>Flask-SocketIO Test</h1>
    <h2>Receive:</h2>
    <div id="log"></div>
    <div id="bigdiv" data-column></div> 
</body>
</html>
